/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ { 
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U &kp I &kp O &kp P
		&kp A &hm LALT S &hm LCTRL D &hm LGUI F &kp G 	    &kp H &hm RGUI J &hm RCTRL K &hm RALT L &kp BKSP
		&kp Z &kp X &kp C &kp V &kp B				        &kp N &kp M  &kp CMMA &kp DOT &mt RSFT RET
          				&mo 1 &kp LSFT  				&kp SPC &mo 2 
		>;
		};

       		left_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5		&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH 		&kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		&kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	&kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp QMARK 
					    &mo 1  &kp LSFT  					&kp RGUI &mo 3 

		>;
		};
		
		right_layer {
		bindings = <
		&kp BANG  &kp ATSN &kp HASH  &kp DLLR  &kp PRCT    			&kp CRRT  &kp AMPS &kp KMLT &kp LPRN &kp RPRN 
		&kp TAB  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 			&kp MINUS &kp KP_EQUAL  &kp LBRC  &kp RBRC   &kp QUOT
		&kp LSFT  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH    			&kp UNDER &kp LEFT &kp DOWN &kp UP  &kp RIGHT
					  &mo 3 &kp LSFT  				&kp SPC  &mo 2 
		>;
		};	
		
		tri_layer {
	        bindings = <
		&kp F1  &kp F2  &kp F3  &kp F4  &kp F5 				&bt BT_CLR &kp RALT &trans   &kp K_MUTE   &kp C_NEXT
		&kp F6 &kp F7 &kp F8 &kp F9 &kp F10  				&bt BT_NXT &kp RGUI &kp PG_UP  &kp K_VOL_UP &kp C_PP
		&kp F11 &kp F12 &kp LALT &kp LCTRL &kp LGUI   		&bt BT_PRV &kp RCTRL &kp PG_DN  &kp K_VOL_DN  &kp C_PREV
					 &trans &trans  					&trans &trans 
		>;
		};	

		minecraft {
	        bindings = <
		&kp NUM_1 &kp NUM_2 &kp W &kp E &kp NUM_3 						&kp T &kp F1 &kp F2 &kp F3 &kp F5
		&kp LSFT &kp A &kp S &kp D &kp NUM_4 	    					&kp BSLH &kp C &kp V &kp L &kp F11
		&kp LCTRL &kp NUM_5 &kp Q &kp NUM_6 &kp F				        &kp Z &kp X  &kp C &kp V &mt RSFT RET
          				&mo 1 &kp SPC  				&kp SPC &tog 5 
		>;
		};

			alpha_no_layers {
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U &kp I &kp O &kp P
		&kp A &kp S &kp D &kp F &kp G 	    				&kp H &kp J &kp K &kp L &kp BKSP
		&kp Z &kp X &kp C &kp V &kp B				        &kp N &kp M  &kp CMMA &kp DOT &mt RSFT RET
          				&mo 1 &kp LSFT  				&kp SPC &tog 5
		>;
        
	};
};
